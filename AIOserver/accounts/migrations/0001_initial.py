# Generated by Django 3.2.23 on 2024-01-25 09:45

import accounts.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, default='undefinedusername', max_length=40, null=True, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True)),
                ('sign_up_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('online', models.BooleanField(default=False)),
                ('public_profile', models.BooleanField(default=True)),
                ('open_now', models.BooleanField(default=False)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('details', models.CharField(blank=True, max_length=64000, null=True)),
                ('intensity', models.CharField(blank=True, max_length=20, null=True)),
                ('businessstatus', models.CharField(blank=True, max_length=10, null=True)),
                ('pricerange', models.CharField(blank=True, max_length=10, null=True)),
                ('isdetailsprivate', models.BooleanField(default=False)),
                ('isprofileanon', models.BooleanField(default=False)),
                ('issubusersallowed', models.BooleanField(default=False)),
                ('user_type', models.CharField(blank=True, choices=[('P', 'Person'), ('B', 'Business')], max_length=6, null=True)),
                ('business_type', models.CharField(blank=True, max_length=50, null=True)),
                ('calendar_type', models.CharField(blank=True, max_length=50, null=True)),
                ('calendar_ismultichoice', models.BooleanField(default=True)),
                ('locationcountry', models.CharField(blank=True, max_length=200, null=True)),
                ('locationstate', models.CharField(blank=True, max_length=200, null=True)),
                ('locationcity', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('isnsfwallowed', models.BooleanField(default=False)),
                ('isnstlallowed', models.BooleanField(default=False)),
                ('issensitiveallowed', models.BooleanField(default=False)),
                ('isspoilerallowed', models.BooleanField(default=False)),
                ('gatewayname', models.CharField(blank=True, max_length=150, null=True)),
                ('gatewaymerchantid', models.CharField(blank=True, max_length=150, null=True)),
                ('merchantid', models.CharField(blank=True, max_length=150, null=True)),
                ('merchantname', models.CharField(blank=True, max_length=150, null=True)),
                ('wifiname', models.CharField(blank=True, max_length=100, null=True)),
                ('wifipassword', models.CharField(blank=True, max_length=100, null=True)),
                ('ishotel', models.BooleanField(default=False)),
                ('hotelclass', models.IntegerField(default='0')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('originalarticle', models.CharField(blank=True, max_length=250, null=True)),
                ('caption', models.CharField(max_length=250)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField(default='0')),
                ('locationcountry', models.CharField(blank=True, max_length=200, null=True)),
                ('locationstate', models.CharField(blank=True, max_length=200, null=True)),
                ('locationcity', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('details', models.CharField(blank=True, max_length=64000)),
                ('allowcomments', models.BooleanField(default=False)),
                ('anonymity', models.BooleanField(default=False)),
                ('nsfw', models.BooleanField(default=False)),
                ('nstl', models.BooleanField(default=False)),
                ('sensitive', models.BooleanField(default=False)),
                ('spoiler', models.BooleanField(default=False)),
                ('pinned', models.BooleanField(default=False)),
                ('hasImage', models.BooleanField(default=False)),
                ('time', models.CharField(max_length=300)),
                ('productcondition', models.CharField(max_length=300)),
                ('date', models.CharField(max_length=300)),
                ('allowstocks', models.BooleanField(default=False)),
                ('isbuyenabled', models.BooleanField(default=False)),
                ('stock', models.IntegerField(default='0')),
                ('category', models.CharField(blank=True, max_length=200, null=True)),
                ('deliveryfee', models.CharField(blank=True, max_length=100, null=True)),
                ('ishighlighted', models.BooleanField(default=False)),
                ('etatime', models.CharField(blank=True, max_length=50, null=True)),
                ('isdelivered', models.BooleanField(default=False)),
                ('isjobposting', models.BooleanField(default=False)),
                ('hideifoutofstock', models.BooleanField(default=False)),
                ('isforstay', models.BooleanField(default=False)),
                ('checkintime', models.CharField(blank=True, max_length=50, null=True)),
                ('checkouttime', models.CharField(blank=True, max_length=50, null=True)),
                ('startdate', models.CharField(blank=True, max_length=50, null=True)),
                ('enddate', models.CharField(blank=True, max_length=50, null=True)),
                ('readtime', models.CharField(blank=True, max_length=30, null=True)),
                ('deliveredfromtime', models.CharField(blank=True, max_length=30, null=True)),
                ('deliveredtotime', models.CharField(blank=True, max_length=30, null=True)),
                ('specialinstructions', models.CharField(blank=True, max_length=5000, null=True)),
                ('guide', models.CharField(blank=True, max_length=5000, null=True)),
                ('adults', models.IntegerField(default='0')),
                ('kids', models.IntegerField(default='0')),
                ('bedrooms', models.IntegerField(default='0')),
                ('bathrooms', models.IntegerField(default='0')),
                ('pricecurrency', models.CharField(blank=True, max_length=10, null=True)),
                ('pricetype', models.CharField(blank=True, max_length=30, null=True)),
                ('isquestion', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity', models.CharField(blank=True, max_length=150, null=True)),
                ('starttime', models.CharField(blank=True, max_length=200, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleAmenity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amenity', models.CharField(blank=True, max_length=200, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleBookmark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='ArticleCheckbox',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hint', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleChoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('item', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('isbuyenabled', models.BooleanField(default=False)),
                ('allowstocks', models.BooleanField(default=False)),
                ('stock', models.IntegerField(default='0')),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='ArticleChoiceCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('allchooseable', models.BooleanField(default=False)),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(choices=[('A', 'Comment'), ('B', 'Insight'), ('C', 'AccountHealth'), ('D', 'Review'), ('E', 'Education'), ('F', 'QnA'), ('G', 'Feedback'), ('H', 'Suggestion')], default='A', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleCommentDislike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleCommentLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDetailCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=150, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDetailIncluded',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('included', models.CharField(blank=True, max_length=150, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDetailRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rule', models.CharField(blank=True, max_length=150, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDetailSpec',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=150, null=True)),
                ('spec', models.CharField(blank=True, max_length=150, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDislike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hint', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleHighlight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('highlight', models.CharField(blank=True, max_length=300, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='ArticleLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleSharedImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleSharedVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag', models.CharField(blank=True, max_length=35, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleTravelLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=150, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleUserTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video', models.FileField(blank=True, null=True, upload_to='videos', validators=[accounts.validators.validate_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='ArticleView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BoughtCheck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.FloatField(default='0')),
                ('deliveryfee', models.FloatField(default='0')),
                ('count', models.IntegerField(default='1')),
                ('item', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.CharField(blank=True, max_length=300, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('specialrequest', models.CharField(blank=True, max_length=500)),
                ('category', models.CharField(blank=True, max_length=200, null=True)),
                ('contact', models.CharField(blank=True, max_length=80)),
                ('fullname', models.CharField(blank=True, max_length=200)),
                ('deliverydate', models.CharField(blank=True, max_length=80)),
                ('deliverytype', models.CharField(blank=True, max_length=80)),
                ('deliverytime', models.CharField(blank=True, max_length=80)),
                ('deliveryaddress', models.CharField(blank=True, max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BoughtItemChoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('choice', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.CharField(blank=True, max_length=300, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField(default='0')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('businesstype', models.CharField(blank=True, max_length=150, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarDate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.CharField(max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item', models.CharField(max_length=200)),
                ('date', models.CharField(max_length=200)),
                ('time', models.CharField(blank=True, max_length=200, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('times', models.CharField(max_length=300)),
                ('dates', models.CharField(max_length=300)),
                ('items', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarTime',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time', models.CharField(max_length=50)),
                ('date', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('allowstocks', models.BooleanField(default=False)),
                ('stock', models.IntegerField(default='0')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=300, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('isfood', models.BooleanField(default=False)),
                ('foodbusinesstype', models.CharField(blank=True, max_length=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('count', models.IntegerField(default='1')),
                ('price', models.FloatField(default='0')),
            ],
        ),
        migrations.CreateModel(
            name='CartItemChoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('choice', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.CharField(blank=True, max_length=300, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField(default='0')),
            ],
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('itemtype', models.CharField(blank=True, max_length=150, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item', models.CharField(blank=True, max_length=200, null=True)),
                ('buycategory', models.CharField(blank=True, max_length=200, null=True)),
                ('reason', models.CharField(blank=True, max_length=500, null=True)),
                ('date', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
                ('requesttype', models.CharField(blank=True, max_length=200, null=True)),
                ('time', models.CharField(blank=True, max_length=200, null=True)),
                ('clientnow', models.BooleanField(default=False)),
                ('isdenied', models.BooleanField(default=False)),
                ('isaccepted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('contact', models.CharField(blank=True, max_length=80)),
                ('fullname', models.CharField(blank=True, max_length=200)),
                ('deliverydate', models.CharField(blank=True, max_length=80)),
                ('deliverytype', models.CharField(blank=True, max_length=80)),
                ('deliveryaddress', models.CharField(blank=True, max_length=200)),
                ('count', models.IntegerField(default='1')),
                ('price', models.FloatField(default='0')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests_sett', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(choices=[('A', 'Feedback'), ('B', 'Insight'), ('C', 'AccountHealth'), ('D', 'Review'), ('E', 'Education'), ('F', 'QnA'), ('G', 'Comment'), ('H', 'Suggestion')], default='A', max_length=15)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercomments_set', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='accounts.usercomment')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercomments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermessages_set', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermessages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userviews', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userviews_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag', models.CharField(blank=True, max_length=35, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usertags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=150)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.article')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPhone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('phonename', models.CharField(blank=True, max_length=30, null=True)),
                ('iswp', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userphones', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserOpeningHour',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('weekday', models.CharField(blank=True, max_length=150, null=True)),
                ('fromhour', models.CharField(blank=True, max_length=150, null=True)),
                ('tohour', models.CharField(blank=True, max_length=150, null=True)),
                ('isalwaysopen', models.BooleanField(default=False)),
                ('ispermanentlyclosed', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='useropeninghours', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMessageVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video', models.FileField(blank=True, null=True, upload_to='videos', validators=[accounts.validators.validate_file_extension])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermessagevideos_set', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermessagevideos', to='accounts.usermessage')),
            ],
        ),
        migrations.CreateModel(
            name='UserMessageImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermessageimages_set', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermessageimages', to='accounts.usermessage')),
            ],
        ),
        migrations.CreateModel(
            name='UserMail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mail', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermails', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('locationname', models.CharField(blank=True, max_length=80, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userlocations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userlikes', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userlikes_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userimages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFollow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('issilent', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userdislikes', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userdislikes_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCommentLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercommentlikes_set', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercommentlikes', to='accounts.usercomment')),
            ],
        ),
        migrations.CreateModel(
            name='UserCommentDislike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercommentdislikes_set', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercommentdislikes', to='accounts.usercomment')),
            ],
        ),
        migrations.CreateModel(
            name='UserCartItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
                ('count', models.IntegerField(default='1')),
                ('isfood', models.BooleanField(default=False)),
                ('foodbusinesstype', models.CharField(blank=True, max_length=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usercartitems', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCalendarType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('calendar_type', models.CharField(blank=True, max_length=70, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usercalendartype', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userblocks', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userblocks_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('banreason', models.CharField(max_length=500)),
                ('bantime', models.CharField(max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReservationSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('startdate', models.CharField(max_length=200)),
                ('enddate', models.CharField(max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservationschedules', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservationschedules_set', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservationschedules_set2', to='accounts.article')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationDeactivationMonth',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('startdate', models.CharField(blank=True, max_length=30, null=True)),
                ('enddate', models.CharField(blank=True, max_length=30, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservationdeactivationmonths', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestItemChoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('choice', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.CharField(blank=True, max_length=300, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField(default='0')),
                ('request', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestchoices', to='accounts.request')),
            ],
        ),
        migrations.CreateModel(
            name='RequestItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=300, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('count', models.IntegerField(default='1')),
                ('price', models.FloatField(default='0')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestitems_set', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestitems', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='images', validators=[accounts.validators.validate_file_extension])),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestimages', to='accounts.request')),
            ],
        ),
        migrations.CreateModel(
            name='RequestForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hint', models.CharField(blank=True, max_length=500, null=True)),
                ('content', models.CharField(blank=True, max_length=500, null=True)),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestforms', to='accounts.request')),
            ],
        ),
        migrations.CreateModel(
            name='RequestCheckbox',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hint', models.CharField(blank=True, max_length=500, null=True)),
                ('boolean', models.BooleanField(default=False)),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestcheckboxes', to='accounts.request')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('times', models.CharField(max_length=300)),
                ('dates', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetingstatuses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.CharField(max_length=200)),
                ('time', models.CharField(blank=True, max_length=200, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetingschedules', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetingschedules_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='itemtype',
            constraint=models.UniqueConstraint(fields=('itemtype',), name='unique_itemtype'),
        ),
        migrations.AddField(
            model_name='cartitemchoice',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cartitemchoices', to='accounts.cartitem'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cartitems', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cartitems_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calendartime',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendartimes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calendarstatus',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendarstatuses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calendarschedule',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendarschedules', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calendarschedule',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendarschedules_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calendardate',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendardates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='businesstype',
            constraint=models.UniqueConstraint(fields=('businesstype',), name='unique_businesstype'),
        ),
        migrations.AddField(
            model_name='boughtitemchoice',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='boughtcheckchoices', to='accounts.boughtcheck'),
        ),
        migrations.AddField(
            model_name='boughtcheck',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boughtchecks_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boughtcheck',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boughtchecks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articleview',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articleviews', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articleview',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articleviews_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articlevideo',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlevideos', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articleusertag',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articleusertags', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articleusertag',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articleusertags_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articletravellocation',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articletravellocations', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articletag',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articletags', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlesharedvideo',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlesharedvideos', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlesharedimage',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlesharedimages', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlelike',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlelikes', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlelike',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlelikes_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articleimage',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articleimages', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlehighlight',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlehighlights', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articleform',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articleforms', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articleform',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articleforms_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articledislike',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articledislikes', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articledislike',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articledislikes_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articledetailspec',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articledetailspecs', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articledetailrule',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articledetailrules', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articledetailincluded',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articledetailincludeds', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articledetailcategory',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articledetailcategories', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlecommentlike',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlecommentlikes', to='accounts.articlecomment'),
        ),
        migrations.AddField(
            model_name='articlecommentlike',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlecommentlikes_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articlecommentdislike',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlecommentdislikes', to='accounts.articlecomment'),
        ),
        migrations.AddField(
            model_name='articlecommentdislike',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlecommentdislikes_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articlecomment',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlecomments', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlecomment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlecomments_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articlecomment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='accounts.articlecomment'),
        ),
        migrations.AddField(
            model_name='articlechoicecategory',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlechoicecategories', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlechoice',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlechoices', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlecheckbox',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlecheckboxes', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlecheckbox',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlecheckboxes_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articlecategory',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articlecategories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articlebookmark',
            name='article',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userbookmarks_set', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articlebookmark',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userbookmarks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articleamenity',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articleamenities', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='articleactivity',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articleactivities', to='accounts.article'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='listcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articles_set', to='accounts.articlecategory'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='userview',
            constraint=models.UniqueConstraint(fields=('author', 'profile'), name='unique_userview'),
        ),
        migrations.AddConstraint(
            model_name='userreport',
            constraint=models.UniqueConstraint(fields=('profile',), name='unique_userreport'),
        ),
        migrations.AddConstraint(
            model_name='useropeninghour',
            constraint=models.UniqueConstraint(fields=('author', 'weekday'), name='unique_useropeninghour'),
        ),
        migrations.AddConstraint(
            model_name='userlike',
            constraint=models.UniqueConstraint(fields=('author', 'profile'), name='unique_userlike'),
        ),
        migrations.AddConstraint(
            model_name='userfollow',
            constraint=models.UniqueConstraint(fields=('author', 'profile'), name='unique_userfollow'),
        ),
        migrations.AddConstraint(
            model_name='userdislike',
            constraint=models.UniqueConstraint(fields=('author', 'profile'), name='unique_userdislike'),
        ),
        migrations.AddConstraint(
            model_name='usercommentlike',
            constraint=models.UniqueConstraint(fields=('author', 'profile'), name='unique_usercommentlike'),
        ),
        migrations.AddConstraint(
            model_name='usercommentdislike',
            constraint=models.UniqueConstraint(fields=('author', 'profile'), name='unique_usercommentdislike'),
        ),
        migrations.AddConstraint(
            model_name='userblock',
            constraint=models.UniqueConstraint(fields=('author', 'profile'), name='unique_userblock'),
        ),
        migrations.AddConstraint(
            model_name='userban',
            constraint=models.UniqueConstraint(fields=('profile',), name='unique_userban'),
        ),
        migrations.AddConstraint(
            model_name='reservationdeactivationmonth',
            constraint=models.UniqueConstraint(fields=('author', 'startdate', 'enddate'), name='unique_reservationdeactivationmonth'),
        ),
        migrations.AddConstraint(
            model_name='request',
            constraint=models.UniqueConstraint(fields=('author', 'profile', 'requesttype', 'item'), name='unique_request'),
        ),
        migrations.AddConstraint(
            model_name='meetingstatus',
            constraint=models.UniqueConstraint(fields=('author', 'times', 'dates'), name='unique_meetingstatus'),
        ),
        migrations.AddConstraint(
            model_name='meetingschedule',
            constraint=models.UniqueConstraint(fields=('author', 'profile', 'date', 'time'), name='unique_meetingschedule'),
        ),
        migrations.AddConstraint(
            model_name='calendartime',
            constraint=models.UniqueConstraint(fields=('author', 'time', 'date'), name='unique_calendartime'),
        ),
        migrations.AddConstraint(
            model_name='calendarstatus',
            constraint=models.UniqueConstraint(fields=('author', 'times', 'dates', 'items'), name='unique_calendarstatus'),
        ),
        migrations.AddConstraint(
            model_name='calendardate',
            constraint=models.UniqueConstraint(fields=('author', 'date'), name='unique_calendardate'),
        ),
        migrations.AddConstraint(
            model_name='articleview',
            constraint=models.UniqueConstraint(fields=('author', 'article'), name='unique_articleview'),
        ),
        migrations.AddConstraint(
            model_name='articleusertag',
            constraint=models.UniqueConstraint(fields=('profile', 'article'), name='unique_articleusertag'),
        ),
        migrations.AddConstraint(
            model_name='articletravellocation',
            constraint=models.UniqueConstraint(fields=('location', 'article'), name='unique_articletravellocation'),
        ),
        migrations.AddConstraint(
            model_name='articlelike',
            constraint=models.UniqueConstraint(fields=('author', 'article'), name='unique_articlelike'),
        ),
        migrations.AddConstraint(
            model_name='articlehighlight',
            constraint=models.UniqueConstraint(fields=('highlight', 'article'), name='unique_articlehighlight'),
        ),
        migrations.AddConstraint(
            model_name='articledislike',
            constraint=models.UniqueConstraint(fields=('author', 'article'), name='unique_articledislike'),
        ),
        migrations.AddConstraint(
            model_name='articledetailspec',
            constraint=models.UniqueConstraint(fields=('category', 'spec', 'article'), name='unique_articledetailspec'),
        ),
        migrations.AddConstraint(
            model_name='articledetailrule',
            constraint=models.UniqueConstraint(fields=('rule', 'article'), name='unique_articledetailrule'),
        ),
        migrations.AddConstraint(
            model_name='articledetailincluded',
            constraint=models.UniqueConstraint(fields=('included', 'article'), name='unique_articledetailincluded'),
        ),
        migrations.AddConstraint(
            model_name='articledetailcategory',
            constraint=models.UniqueConstraint(fields=('category', 'article'), name='unique_articledetailcategory'),
        ),
        migrations.AddConstraint(
            model_name='articlecommentlike',
            constraint=models.UniqueConstraint(fields=('author', 'article'), name='unique_articlecommentlike'),
        ),
        migrations.AddConstraint(
            model_name='articlecommentdislike',
            constraint=models.UniqueConstraint(fields=('author', 'article'), name='unique_articlecommentdislike'),
        ),
        migrations.AddConstraint(
            model_name='articleamenity',
            constraint=models.UniqueConstraint(fields=('amenity', 'article'), name='unique_articleamenity'),
        ),
        migrations.AddConstraint(
            model_name='articleactivity',
            constraint=models.UniqueConstraint(fields=('activity', 'article'), name='unique_articleactivity'),
        ),
    ]
